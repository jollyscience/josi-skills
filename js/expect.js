// Generated by CoffeeScript 1.6.3
(function(){var e,t;e=require("../class/Listener");t=require("../class/promises");module.exports=function(n){var r,i;i={};n.Response.prototype.expect=function(e){var r,i;try{i=new t.Promise;n.addResponse(this.message.user,e,i);return i}catch(s){r=s;n.logger.error(r,"expect/expect()");return this.send("I'm sorry. Something went wrong trying to expect.")}};n.addResponse=function(t,r,s){var o;try{i[t.id]=new e(n,r);return i[t.id].init().done(function(e){return s.resolve(e)}).fail(function(e){return s.reject(e)})}catch(u){o=u;return n.logger.error(o,"expect/robot.addResponse()")}};n.oldReceive=n.receive;n.receive=function(e){var t,r;try{if(e.user!=null&&i[e.user.id]!=null){r=i[e.user.id];delete i[e.user.id];if(r.call(e))return;i[e.user.id]=r}return n.oldReceive(e)}catch(s){t=s;return n.logger.error(t,"expect/robot.receive()")}};r=function(e){return[e[1],e[0]+e[1]]};return n.respond(/test expect$/i,function(e){var t;e.send("Say 'yes'");try{return e.expect(/y/i).then(function(t){t.count=r([0,1]);e.send("Well done! Now I can do this "+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send("... and I can still do this! "+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){var n;t.count=r(t.count);e.send("What number is this? --> ["+t.count[1]+"]");n=new RegExp(t.count[1],"i");return e.expect(n).done(function(e){return t}).fail(function(t){e.send("You did not say what I expected...");e.send("Instead, you said "+t.text+".");e.send("...so that will be all for now.");return e.finish()})}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).then(function(t){t.count=r(t.count);e.send(""+t.count[1]);return t}).done(function(t){t.count=r(t.count);e.send("... and this! "+t.count[1]);return t}).fail(function(t){n.logger.info(t,"Test Expect Failed");return e.send("Well, it was worth a shot.")})}catch(i){t=i;n.logger.error(t);return e.send("Unfortunately, something has gone very wrong.")}})}}).call(this);